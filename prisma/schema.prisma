// Kraftverk Studio - Datamodell
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["app", "public"]
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  membershipId String
  membership   Membership @relation(fields: [membershipId], references: [id])
  bookings     Booking[]
  createdAt    DateTime @default(now())
}

model Membership {
  id                String  @id
  name              String
  price             Int
  bookingWindowDays Int
  guestAllowance    Int
  features          String  // JSON string array
  users             User[]
}

model ClassTemplate {
  id          String          @id @default(cuid())
  title       String
  category    String
  duration    Int
  intensity   String
  zoneProfile String?         // JSON string
  instances   ClassInstance[]
}

model ClassInstance {
  id         String    @id @default(cuid())
  templateId String
  template   ClassTemplate @relation(fields: [templateId], references: [id])
  studioId   String
  trainerId  String
  startTime  DateTime
  spots      Int
  waitlist   String    // JSON string array
  bookings   Booking[]
}

model Booking {
  id              String        @id @default(cuid())
  userId          String
  user            User          @relation(fields: [userId], references: [id])
  classInstanceId String
  classInstance   ClassInstance @relation(fields: [classInstanceId], references: [id])
  status          String
  bookedAt        DateTime      @default(now())
}

model Trainer {
  id          String @id @default(cuid())
  name        String
  bio         String
  specialties String // JSON string array
  image       String?
}

// --- Campaign Pricing (PostgreSQL source of truth) ---

model CampaignPrice {
  tenantId      String
  productId     String
  campaignId    String?
  stripePriceId String
  status        CampaignStatus @default(active)
  validFrom     DateTime        @default(now())
  validTo       DateTime?
  metadata      Json?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  @@schema("app")
  @@id([tenantId, productId, status])
  @@index([tenantId, productId])
}

model CampaignPriceHistory {
  id            String   @id @default(cuid())
  tenantId      String
  productId     String
  campaignId    String?
  stripePriceId String
  status        CampaignStatus
  eventType     String
  eventId       String?
  payload       Json?
  validFrom     DateTime
  validTo       DateTime?
  createdAt     DateTime @default(now())

  @@schema("app")
  @@index([tenantId, productId, createdAt])
}

model ProcessedWebhookEvent {
  id        String   @id          // Stripe event id
  type      String
  tenantId  String
  createdAt DateTime @default(now())

  @@schema("app")
}

enum CampaignStatus {
  active
  expired
  scheduled
  paused

  @@schema("app")
}





